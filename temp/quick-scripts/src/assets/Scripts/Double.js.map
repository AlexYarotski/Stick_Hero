{"version":3,"sources":["assets\\Scripts\\Double.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAkD;AAE5C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAoC,0BAAY;IAAhD;QAAA,qEA6BC;QA5BoB,qBAAe,GAAW,iBAAiB,CAAC;QAC5C,uBAAiB,GAAW,kBAAkB,CAAC;QAC/C,YAAM,GAAW,QAAQ,CAAC;QAEnC,iBAAW,GAAmB,IAAI,CAAC;;IAwB/C,CAAC;IAtBa,uBAAM,GAAhB;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QAErD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAE5E,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;IAES,0BAAS,GAAnB;QACI,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,KAAkB;QACvC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,0BAAgB,CAAC,EAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpC;IACL,CAAC;IAEO,mCAAkB,GAA1B;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IA5BgB,MAAM;QAD1B,OAAO;OACa,MAAM,CA6B1B;IAAD,aAAC;CA7BD,AA6BC,CA7BmC,EAAE,CAAC,SAAS,GA6B/C;kBA7BoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import PlayerController from \"./PlayerController\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Double extends cc.Component {\n    private readonly COLLISION_ENTER: string = 'collision-enter';\n    private readonly MOVEMENT_COMPLETE: string = 'movementComplete';\n    private readonly DOUBLE: string = 'double';\n\n    private boxCollider: cc.BoxCollider = null;\n\n    protected onLoad() {\n        this.boxCollider = this.getComponent(cc.BoxCollider);\n\n        this.boxCollider.node.on(this.COLLISION_ENTER, this.onCollisionEnter, this);\n\n        cc.systemEvent.on(this.MOVEMENT_COMPLETE, this.onMovementComplete, this);\n    }\n\n    protected onDestroy() {\n        cc.systemEvent.off(this.MOVEMENT_COMPLETE, this.onMovementComplete, this);\n    }\n\n    private onCollisionEnter(other: cc.Collider) {\n        if (other.node.getComponent(PlayerController)) {\n            this.node.active = false;\n            cc.systemEvent.emit(this.DOUBLE);\n        }\n    }\n\n    private onMovementComplete(){\n        this.node.active = false;\n    }\n}\n"]}