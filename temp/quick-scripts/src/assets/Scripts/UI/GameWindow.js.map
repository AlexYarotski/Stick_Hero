{"version":3,"sources":["assets\\Scripts\\UI\\GameWindow.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA8B;AAC9B,IAAO,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;AAElB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAwC,8BAAM;IAA9C;QAAA,qEAwDC;QAvDoB,YAAM,GAAW,QAAQ,CAAC;QAGnC,aAAO,GAAU,IAAI,CAAC;QAGtB,mBAAa,GAAW,GAAG,CAAC;QAE5B,cAAQ,GAAW,GAAG,CAAC;QAEvB,mBAAa,GAAW,CAAC,CAAC;QAC1B,WAAK,GAAW,CAAC,CAAC;;IA4C9B,CAAC;IA1CG,sBAAI,+BAAO;aAAX;YACI,OAAO,KAAK,CAAC;QACjB,CAAC;;;OAAA;IAES,6BAAQ,GAAlB;QACI,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IAES,8BAAS,GAAnB;QACI,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAES,0BAAK,GAAf;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;IACjD,CAAC;IAEM,yBAAI,GAAX;QACI,iBAAM,IAAI,WAAE,CAAC;QAEb,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,iCAAY,GAAnB;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAChD,CAAC;IAEO,kCAAa,GAArB;QAAA,iBAcC;QAbG,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAE5C,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE5C,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;aACtB,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;aACrE,IAAI,CAAC;YACF,EAAE,CAAC,KAAK,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;iBACtB,EAAE,CAAC,KAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,KAAI,CAAC,aAAa,EAAE,CAAC;iBACrD,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACjB,CAAC;IAnDD;QADC,QAAQ,CAAC,KAAK,CAAC;+CACc;IAG9B;QADC,QAAQ,CAAC,MAAM,CAAC;qDACmB;IAEpC;QADC,QAAQ,CAAC,MAAM,CAAC;gDACc;IATd,UAAU;QAD9B,OAAO;OACa,UAAU,CAwD9B;IAAD,iBAAC;CAxDD,AAwDC,CAxDuC,gBAAM,GAwD7C;kBAxDoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import Window from \"./Window\";\r\nimport Label = cc.Label;\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameWindow extends Window {\r\n    private readonly DOUBLE: string = 'double';\r\n\r\n    @property(Label)\r\n    private counter: Label = null;\r\n\r\n    @property(Number)\r\n    private scaleDuration: number = 0.5;\r\n    @property(Number)\r\n    private increase: number = 1.5;\r\n\r\n    private originalScale: number = 0;\r\n    private count: number = 0;\r\n\r\n    get isPopUp(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected onEnable() {\r\n        cc.systemEvent.on(this.DOUBLE, this.increaseScore, this);\r\n    }\r\n\r\n    protected onDisable() {\r\n        cc.systemEvent.off(this.DOUBLE, this.increaseScore, this);\r\n    }\r\n\r\n    protected start() {\r\n        this.originalScale = this.counter.node.scale;\r\n    }\r\n\r\n    public show() {\r\n        super.show();\r\n\r\n        this.resetCounter();\r\n    }\r\n\r\n    public resetCounter(){\r\n        this.count = 0;\r\n        this.counter.string = this.count.toString();\r\n    }\r\n\r\n    private increaseScore(){\r\n        this.count++;\r\n        this.counter.string = this.count.toString();\r\n\r\n        cc.Tween.stopAllByTarget(this.counter.node);\r\n\r\n        cc.tween(this.counter.node)\r\n            .to(this.scaleDuration, { scale: this.originalScale * this.increase })\r\n            .call(() => {\r\n                cc.tween(this.counter.node)\r\n                    .to(this.scaleDuration, { scale: this.originalScale })\r\n                    .start();\r\n            })\r\n            .start();\r\n    }\r\n}\r\n"]}