{"version":3,"sources":["assets\\Scripts\\UI\\LoseWindow.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA8B;AAC9B,IAAO,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;AAC1B,8CAAyC;AAEnC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAwC,8BAAM;IAA9C;QAAA,qEAuCC;QAtCoB,kBAAY,GAAW,aAAa,CAAC;QACrC,qBAAe,GAAW,gBAAgB,CAAC;QAGpD,UAAI,GAAW,IAAI,CAAC;QAEpB,aAAO,GAAW,IAAI,CAAC;QAGvB,WAAK,GAAa,IAAI,CAAC;QAGvB,eAAS,GAAa,IAAI,CAAC;QAG3B,iBAAW,GAAa,IAAI,CAAC;;IAuBzC,CAAC;IArBG,sBAAI,+BAAO;aAAX;YACI,OAAO,KAAK,CAAC;QACjB,CAAC;;;OAAA;IAES,2BAAM,GAAhB;QAAA,iBAGC;QAFG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,cAAM,OAAA,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,EAAtC,CAAsC,EAAE,IAAI,CAAC,CAAC;QACnG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,cAAM,OAAA,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,EAAzC,CAAyC,EAAE,IAAI,CAAC,CAAC;IAC7G,CAAC;IAES,8BAAS,GAAnB;QAAA,iBAGC;QAFG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,cAAM,OAAA,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,EAAtC,CAAsC,EAAE,IAAI,CAAC,CAAC;QACpG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,cAAM,OAAA,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,EAAzC,CAAyC,EAAE,IAAI,CAAC,CAAC;IAC9G,CAAC;IAEM,yBAAI,GAAX;QACI,iBAAM,IAAI,WAAE,CAAC;QAEb,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,qBAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,qBAAW,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,qBAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,EAAE,CAAC;IACtE,CAAC;IAjCD;QADC,QAAQ,CAAC,MAAM,CAAC;4CACW;IAE5B;QADC,QAAQ,CAAC,MAAM,CAAC;+CACc;IAG/B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACY;IAG/B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;iDACgB;IAGnC;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;mDACkB;IAhBpB,UAAU;QAD9B,OAAO;OACa,UAAU,CAuC9B;IAAD,iBAAC;CAvCD,AAuCC,CAvCuC,gBAAM,GAuC7C;kBAvCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import Window from \"./Window\";\r\nimport Button = cc.Button;\r\nimport DataCounter from \"../DataCounter\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseWindow extends Window {\r\n    private readonly MAIN_CLICKED: string = 'mainClicked';\r\n    private readonly RESTART_CLICKED: string = 'restartClicked';\r\n\r\n    @property(Button)\r\n    private main: Button = null;\r\n    @property(Button)\r\n    private restart: Button = null;\r\n\r\n    @property(cc.Label)\r\n    private score: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    private bestScore: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    private doubleCount: cc.Label = null;\r\n\r\n    get isPopUp(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected onLoad() {\r\n        this.main.node.on(cc.Node.EventType.TOUCH_END, () => cc.systemEvent.emit(this.MAIN_CLICKED), this);\r\n        this.restart.node.on(cc.Node.EventType.TOUCH_END, () => cc.systemEvent.emit(this.RESTART_CLICKED), this);\r\n    }\r\n\r\n    protected onDestroy() {\r\n        this.main.node.off(cc.Node.EventType.TOUCH_END, () => cc.systemEvent.emit(this.MAIN_CLICKED), this);\r\n        this.restart.node.off(cc.Node.EventType.TOUCH_END, () => cc.systemEvent.emit(this.RESTART_CLICKED), this);\r\n    }\r\n\r\n    public show() {\r\n        super.show();\r\n\r\n        this.score.string = DataCounter.getScore().toString();\r\n        this.bestScore.string = DataCounter.getBestScore().toString();\r\n        this.doubleCount.string = DataCounter.getDoubleCount().toString();\r\n    }\r\n}\r\n"]}