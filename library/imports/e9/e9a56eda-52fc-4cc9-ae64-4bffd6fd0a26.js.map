{"version":3,"sources":["assets\\Scripts\\DataCounter.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IA8BA,CAAC;IAzBiB,oBAAQ,GAAtB;QACI,IAAM,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChE,OAAO,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IAEa,oBAAQ,GAAtB,UAAuB,KAAa;QAChC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAEa,wBAAY,GAA1B;QACI,IAAM,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACrE,OAAO,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IAEa,wBAAY,GAA1B,UAA2B,KAAa;QACpC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvE,CAAC;IAEa,0BAAc,GAA5B;QACI,IAAM,YAAY,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClE,OAAO,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAEa,0BAAc,GAA5B,UAA6B,MAAc;QAC3C,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAAA,CAAC;IA5BzC,qBAAS,GAAW,OAAO,CAAC;IAC5B,0BAAc,GAAW,YAAY,CAAC;IACtC,sBAAU,GAAW,YAAY,CAAC;IA2B9D,kBAAC;CA9BD,AA8BC,IAAA;kBA9BoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["export default class DataCounter {\r\n    private static readonly SCORE_KEY: string = 'score';\r\n    private static readonly BEST_SCORE_KEY: string = 'best_score';\r\n    private static readonly DOUBLE_KEY: string = 'best_score';\r\n\r\n    public static getScore(): number {\r\n        const scoreString = cc.sys.localStorage.getItem(this.SCORE_KEY);\r\n        return scoreString ? parseInt(scoreString) : 0;\r\n    }\r\n\r\n    public static setScore(score: number): void {\r\n        cc.sys.localStorage.setItem(this.SCORE_KEY, score.toString());\r\n    }\r\n\r\n    public static getBestScore(): number {\r\n        const scoreString = cc.sys.localStorage.getItem(this.BEST_SCORE_KEY);\r\n        return scoreString ? parseInt(scoreString) : 0;\r\n    }\r\n\r\n    public static setBestScore(score: number): void {\r\n        cc.sys.localStorage.setItem(this.BEST_SCORE_KEY, score.toString());\r\n    }\r\n\r\n    public static getDoubleCount(): number {\r\n        const doubleString = cc.sys.localStorage.getItem(this.DOUBLE_KEY);\r\n        return doubleString ? parseInt(doubleString) : 0;\r\n    }\r\n\r\n    public static setDoubleCount(double: number){\r\n    cc.sys.localStorage.setItem(this.DOUBLE_KEY, double.toString());}\r\n}\r\n"]}