{"version":3,"sources":["assets\\Scripts\\PlayerController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Stick from \"./Stick\";\r\nimport PlayerFlip from \"./PlayerFlip\";\r\nimport Platform from \"./Platform\";\r\nimport StickSpawner from \"./Spawner/StickSpawner\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PlayerController extends cc.Component {\r\n    private static readonly PLAYER_REACHED: string = 'playerReached';\r\n\r\n    private readonly PLAYER_FALL: string = 'playerFall';\r\n    private readonly COLLISION_ENTER: string = 'collision-enter';\r\n\r\n    private readonly offsetStick: cc.Vec2 = cc.v2(80, 10);\r\n    public readonly offsetPlatformX: number = -50;\r\n\r\n    @property(cc.Prefab)\r\n    stickPrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Float)\r\n    moveDuration: number = 1;\r\n    @property(cc.Float)\r\n    fallDuration: number = 0.2;\r\n\r\n    @property(StickSpawner)\r\n    private stickSpawner: StickSpawner = null;\r\n\r\n    @property(PlayerFlip)\r\n    private playerFlip: PlayerFlip = null;\r\n\r\n    @property(cc.Float)\r\n    private speed: number = 100;\r\n\r\n    private stick: Stick = null;\r\n    private previousStick: Stick = null;\r\n\r\n    private boxCollider: cc.BoxCollider = null;\r\n    private canMove: boolean = true;\r\n\r\n    private targetPosition: cc.Vec3 = null;\r\n    private moveCompleteCallback: Function = null;\r\n\r\n    protected onLoad() {\r\n        this.boxCollider = this.getComponent(cc.BoxCollider);\r\n        this.boxCollider.node.on(this.COLLISION_ENTER, this.onCollisionEnter, this);\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (this.targetPosition && this.canMove) {\r\n            this.handleMovement(dt);\r\n        }\r\n    }\r\n\r\n    private handleMovement(dt: number) {\r\n        this.playerFlip.enableFlip();\r\n        const direction = this.calculateDirectionToTarget();\r\n        const step = this.calculateStep(direction, dt);\r\n        const distanceToTarget = this.calculateDistanceToTarget();\r\n\r\n        if (this.isTargetReached(step, distanceToTarget)) {\r\n            this.finalizeMovement();\r\n        } else {\r\n            this.moveTowardsTarget(step);\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.spawnStick();\r\n        this.playerFlip.reset();\r\n        this.node.active = true;\r\n        this.canMove = true;\r\n        this.targetPosition = null;\r\n    }\r\n\r\n    public moveToEndOfStick(xPos: number) {\r\n        const targetPosition = cc.v3(xPos, this.node.position.y);\r\n        this.setMovement(targetPosition, () => {\r\n            this.initiateFall();\r\n        });\r\n    }\r\n\r\n    public moveToEndOfPlatform(xPos: number) {\r\n        const worldTargetPosition = cc.v3(xPos + this.offsetPlatformX, this.node.position.y);\r\n        const localTargetPosition = this.node.parent.convertToNodeSpaceAR(worldTargetPosition);\r\n        const endPlatformPos = cc.v3(localTargetPosition.x + this.offsetPlatformX, this.node.position.y);\r\n\r\n        const distanceTravelled = Math.abs(this.node.position.x - endPlatformPos.x);\r\n        this.setMovement(endPlatformPos, () => {\r\n            this.onReachEndOfPlatform(distanceTravelled);\r\n            this.playerFlip.disableFlip();\r\n        });\r\n    }\r\n\r\n    protected onCollisionEnter(other: cc.Collider, self: cc.Collider) {\r\n        if (other.node.getComponent(Platform)) {\r\n            this.canMove = false;\r\n            this.initiateFall();\r\n        }\r\n    }\r\n\r\n    private spawnStick() {\r\n        const position = cc.v2(this.node.position.x + this.offsetStick.x, this.node.position.y + this.offsetStick.y);\r\n        this.stick = this.stickSpawner.spawnNode(position).getComponent(Stick);\r\n        this.stick.node.parent = this.node.parent;\r\n        this.stick.reset();\r\n    }\r\n\r\n    private onReachEndOfPlatform(distanceTravelled: number) {\r\n        if (!this.canMove) return;\r\n\r\n        if (this.previousStick) {\r\n            this.stickSpawner.deactivateNode(this.previousStick.node);\r\n        }\r\n\r\n        this.previousStick = this.stick;\r\n        cc.systemEvent.emit(PlayerController.PLAYER_REACHED, distanceTravelled);\r\n    }\r\n\r\n    private setMovement(targetPosition: cc.Vec3, onComplete: Function) {\r\n        this.targetPosition = targetPosition;\r\n        this.moveCompleteCallback = onComplete;\r\n    }\r\n\r\n    private initiateFall() {\r\n        cc.systemEvent.emit(this.PLAYER_FALL);\r\n        this.playerFlip.disableFlip();\r\n        this.canMove = false;\r\n        cc.tween(this.node)\r\n            .to(this.fallDuration, { position: cc.v3(this.node.x, -2000) })\r\n            .start();\r\n\r\n        this.stick.initiateFall();\r\n    }\r\n\r\n    private calculateDirectionToTarget(): cc.Vec3 {\r\n        return this.targetPosition.sub(this.node.position).normalize();\r\n    }\r\n\r\n    private calculateStep(direction: cc.Vec3, dt: number): cc.Vec3 {\r\n        return direction.mul(this.speed * dt);\r\n    }\r\n\r\n    private calculateDistanceToTarget(): number {\r\n        return this.node.position.sub(this.targetPosition).mag();\r\n    }\r\n\r\n    private isTargetReached(step: cc.Vec3, distanceToTarget: number): boolean {\r\n        return step.mag() >= distanceToTarget;\r\n    }\r\n\r\n    private finalizeMovement() {\r\n        this.node.setPosition(this.targetPosition);\r\n        this.targetPosition = null;\r\n\r\n        if (this.moveCompleteCallback) {\r\n            this.moveCompleteCallback();\r\n        }\r\n    }\r\n\r\n    private moveTowardsTarget(step: cc.Vec3) {\r\n        this.node.setPosition(this.node.position.add(step));\r\n    }\r\n}"]}