{"version":3,"sources":["assets\\Scripts\\StickSpawner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAoC;AAG9B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA0C,gCAAO;IAAjD;QAAA,qEAUC;QARW,qBAAe,GAAW,GAAG,CAAC;;IAQ1C,CAAC;IANU,gCAAS,GAAhB,UAAiB,QAAiB;QAC9B,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACxC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,OAAO,QAAQ,CAAC;IACpB,CAAC;IAPD;QADC,QAAQ;yDAC6B;IAFrB,YAAY;QADhC,OAAO;OACa,YAAY,CAUhC;IAAD,mBAAC;CAVD,AAUC,CAVyC,iBAAO,GAUhD;kBAVoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { Spawner } from \"./Spawner\";\nimport StickManager from \"./StickManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class StickSpawner extends Spawner {\n    @property\n    private stickAppearTime: number = 0.5;\n\n    public spawnNode(position: cc.Vec2): cc.Node {\n        const newStick = this.getOrCreateNode();\n        newStick.setPosition(position);\n        newStick.active = true;\n        return newStick;\n    }\n}\n"]}