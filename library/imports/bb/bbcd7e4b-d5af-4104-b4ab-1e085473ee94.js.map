{"version":3,"sources":["assets\\Scripts\\PlatformSpawner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAoC;AAE9B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA6C,mCAAO;IAApD;QAAA,qEA+CC;QA9CoB,UAAI,GAAW,CAAC,IAAI,CAAC;QAG9B,cAAQ,GAAW,EAAE,CAAC;QAGtB,cAAQ,GAAW,GAAG,CAAC;QAGvB,gBAAU,GAAW,GAAG,CAAC;QAGzB,gBAAU,GAAW,GAAG,CAAC;QAGzB,wBAAkB,GAAW,GAAG,CAAC;QAEjC,kBAAY,GAAY,IAAI,CAAC;;IA6BzC,CAAC;IA3BU,mCAAS,GAAhB,UAAiB,QAAkB;QAC/B,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,IAAI,QAAQ,EAAE;YACV,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACtD,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,OAAO,WAAW,CAAC;IACvB,CAAC;IAGO,qDAA2B,GAAnC,UAAoC,QAAiB;QACjD,IAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtF,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC;QAE/B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACtF,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAErG,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QAEzD,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;aACb,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAC7F,KAAK,EAAE,CAAC;IACjB,CAAC;IA1CD;QADC,QAAQ;qDACqB;IAG9B;QADC,QAAQ;qDACsB;IAG/B;QADC,QAAQ;uDACwB;IAGjC;QADC,QAAQ;uDACwB;IAGjC;QADC,QAAQ;+DACgC;IAhBxB,eAAe;QADnC,OAAO;OACa,eAAe,CA+CnC;IAAD,sBAAC;CA/CD,AA+CC,CA/C4C,iBAAO,GA+CnD;kBA/CoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["import { Spawner } from \"./Spawner\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PlatformSpawner extends Spawner {\n    private readonly posY: number = -1100;\n\n    @property\n    private minWidth: number = 50;\n\n    @property\n    private maxWidth: number = 200;\n\n    @property\n    private minXOffset: number = 100;\n\n    @property\n    private maxXOffset: number = 400;\n\n    @property\n    private platformAppearTime: number = 0.5;\n\n    private lastPlatform: cc.Node = null;\n\n    public spawnNode(position?: cc.Vec2): cc.Node {\n        const newPlatform = this.getOrCreateNode();\n        if (position) {\n            newPlatform.setPosition(cc.v2(position.x, this.posY));\n            newPlatform.active = true;\n        } else {\n            this.setRandomPlatformAttributes(newPlatform);\n        }\n\n        this.lastPlatform = newPlatform;\n        return newPlatform;\n    }\n\n\n    private setRandomPlatformAttributes(platform: cc.Node) {\n        const platformWidth = this.minWidth + Math.random() * (this.maxWidth - this.minWidth);\n        platform.width = platformWidth;\n\n        const offsetX = this.minXOffset + Math.random() * (this.maxXOffset - this.minXOffset);\n        const newPositionX = this.lastPlatform ? this.lastPlatform.x + this.lastPlatform.width + offsetX : 0;\n\n        platform.setPosition(cc.v2(newPositionX, this.posY * 2));\n\n        cc.tween(platform)\n            .to(this.platformAppearTime, { position: cc.v3(newPositionX, -1100) }, { easing: 'cubicOut' })\n            .start();\n    }\n}\n"]}