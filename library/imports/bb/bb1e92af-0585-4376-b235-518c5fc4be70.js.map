{"version":3,"sources":["assets\\Scripts\\GameController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAkD;AAClD,qDAAgD;AAE1C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA4C,kCAAY;IAAxD;QAAA,qEAqDC;QAnDG,YAAM,GAAqB,IAAI,CAAC;QAGhC,qBAAe,GAAoB,IAAI,CAAC;QAEhC,kBAAY,GAAY,KAAK,CAAC;QAC9B,kBAAY,GAAY,IAAI,CAAC;QAC7B,eAAS,GAAc,EAAE,CAAC;;IA4CtC,CAAC;IA1CG,8BAAK,GAAL;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,kCAAS,GAAT;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAErC,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;IACtC,CAAC;IAED,uCAAc,GAAd;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,EAAE,EAAlB,CAAkB,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,sCAAa,GAAb,UAAc,SAAkB;QAC5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,2CAAkB,GAAlB;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;QACxF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;IACtC,CAAC;IAED,gCAAO,GAAP;QACI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxB,CAAC;IAlDD;QADC,QAAQ,CAAC,0BAAgB,CAAC;kDACK;IAGhC;QADC,QAAQ,CAAC,yBAAe,CAAC;2DACc;IALvB,cAAc;QADlC,OAAO;OACa,cAAc,CAqDlC;IAAD,qBAAC;CArDD,AAqDC,CArD2C,EAAE,CAAC,SAAS,GAqDvD;kBArDoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["import PlayerController from \"./PlayerController\";\nimport PlatformSpawner from \"./PlatformSpawner\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameController extends cc.Component {\n    @property(PlayerController)\n    player: PlayerController = null;\n\n    @property(PlatformSpawner)\n    platformSpawner: PlatformSpawner = null;\n\n    private isGameActive: boolean = false;\n    private currentStick: cc.Node = null;\n    private platforms: cc.Node[] = [];\n\n    start() {\n        this.initGame();\n    }\n\n    initGame() {\n        this.isGameActive = true;\n        this.resetGame();\n    }\n\n    resetGame() {\n        this.player.node.setPosition(cc.v2(-600, -233));\n        this.clearPlatforms();\n\n        const initialPlatform = this.platformSpawner.spawnPlatform(cc.v2(-495, -708));\n        this.platforms.push(initialPlatform);\n\n        const nextPlatform = this.platformSpawner.spawnPlatform();\n        this.platforms.push(nextPlatform);\n\n        this.player.enableStickCreation();\n    }\n\n    clearPlatforms() {\n        this.platforms.forEach(platform => platform.destroy());\n        this.platforms = [];\n    }\n\n    onStickFallen(stickNode: cc.Node) {\n        this.currentStick = stickNode;\n        this.player.moveToEndOfStick(stickNode, this.onPlayerReachedEnd.bind(this));\n    }\n\n    onPlayerReachedEnd() {\n        const newPlatform = this.platformSpawner.spawnPlatform(this.currentStick.getPosition());\n        this.platforms.push(newPlatform);\n        this.player.enableStickCreation();\n    }\n\n    endGame() {\n        this.isGameActive = false;\n        cc.log('Game Over');\n    }\n}\n"]}