{"version":3,"sources":["assets\\Scripts\\GameController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PlayerController from \"./PlayerController\";\r\nimport PlatformSpawner from \"./Spawner/PlatformSpawner\";\r\nimport StickSpawner from \"./Spawner/StickSpawner\";\r\nimport DoubleSpawner from \"./Spawner/DoubleSpawner\";\r\nimport Platform from \"./Platform\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameController extends cc.Component {\r\n    private readonly Stick_Fallen: string = 'stickFallen';\r\n    private readonly MOVEMENT_COMPLETE: string = 'movementComplete';\r\n    private readonly MAIN_CLICKED: string = 'mainClicked';\r\n    private readonly RESTART_CLICKED: string = 'restartClicked';\r\n\r\n    private readonly startPlatformPos: cc.Vec2 = new cc.Vec2(-105, -1100);\r\n\r\n    @property(PlayerController)\r\n    private player: PlayerController = null;\r\n\r\n    @property(PlatformSpawner)\r\n    private platformSpawner: PlatformSpawner = null;\r\n\r\n    @property(DoubleSpawner)\r\n    private doubleSpawner: DoubleSpawner = null;\r\n\r\n    private currentStick: cc.Node = null;\r\n    private currentPlatform: cc.Node = null;\r\n    private previousPlatform: cc.Node = null;\r\n    private playerPos: cc.Vec2;\r\n\r\n    protected onLoad() {\r\n        cc.systemEvent.on(this.Stick_Fallen, this.onStickFallen, this);\r\n        cc.systemEvent.on(this.MOVEMENT_COMPLETE, this.onMovementComplete, this);\r\n        cc.systemEvent.on(this.MAIN_CLICKED, this.resetPlayer, this);\r\n        cc.systemEvent.on(this.RESTART_CLICKED, this.resetPlayer, this);\r\n    }\r\n\r\n    protected onDestroy() {\r\n        cc.systemEvent.off(this.Stick_Fallen, this.onStickFallen, this);\r\n        cc.systemEvent.off(this.MOVEMENT_COMPLETE, this.onMovementComplete, this);\r\n        cc.systemEvent.off(this.MAIN_CLICKED, this.resetPlayer, this);\r\n        cc.systemEvent.off(this.RESTART_CLICKED, this.resetPlayer, this);\r\n    }\r\n\r\n    protected start() {\r\n        this.previousPlatform = this.platformSpawner.spawnNode(cc.v2(this.startPlatformPos));\r\n    }\r\n\r\n    private resetPlayer() {\r\n        this.player.node.setPosition(this.playerPos);\r\n\r\n        this.player.reset();\r\n    }\r\n\r\n    private onStickFallen(stick: cc.Node) {\r\n        this.currentStick = stick;\r\n        this.playerPos = cc.v2(this.player.node.position.x, this.player.node.position.y);\r\n\r\n        const stickEndPosX = this.currentStick.x + this.currentStick.height - this.player.node.width / 2;\r\n        const stickWorldEndPos = this.currentStick.parent.convertToWorldSpaceAR(\r\n            cc.v2(this.currentStick.x + this.currentStick.height, this.currentStick.y)\r\n        );\r\n\r\n        const platformWorldPos = this.currentPlatform.parent.convertToWorldSpaceAR(this.currentPlatform.getPosition());\r\n        const platformStartX = platformWorldPos.x;\r\n        const platformEndX = platformWorldPos.x + this.currentPlatform.width;\r\n\r\n        if (stickWorldEndPos.x >= platformStartX && stickWorldEndPos.x <= platformEndX) {\r\n            this.player.moveToEndOfPlatform(platformEndX);\r\n        } else {\r\n            this.player.moveToEndOfStick(stickEndPosX);\r\n        }\r\n    }\r\n\r\n    private onMovementComplete() {\r\n        if (!this.currentPlatform) {\r\n            this.player.reset();\r\n            this.currentPlatform = this.platformSpawner.spawnNode();\r\n        } else {\r\n            if (this.previousPlatform) {\r\n                this.platformSpawner.deactivateNode(this.previousPlatform);\r\n            }\r\n\r\n            this.previousPlatform = this.currentPlatform;\r\n            this.currentPlatform = this.platformSpawner.spawnNode();\r\n\r\n            this.player.reset();\r\n        }\r\n\r\n        const previousWorldPos = this.previousPlatform?.parent.convertToWorldSpaceAR(this.previousPlatform.position);\r\n        const currentWorldPos = this.currentPlatform.parent.convertToWorldSpaceAR(this.currentPlatform.position);\r\n\r\n        this.doubleSpawner.spawnNode(cc.v3(previousWorldPos.x + this.previousPlatform.width), currentWorldPos);\r\n    }\r\n}\r\n"]}