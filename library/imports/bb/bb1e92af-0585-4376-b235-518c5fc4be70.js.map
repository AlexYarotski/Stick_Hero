{"version":3,"sources":["assets\\Scripts\\GameController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\nimport PlayerController from \"./PlayerController\";\nimport PlatformSpawner from \"./PlatformSpawner\";\n\n@ccclass\nexport default class GameController extends cc.Component {\n    private readonly startPlayerPos: cc.Vec2 = new cc.Vec2(-503, -309.376);\n    private readonly startPlatformPos: cc.Vec2 = new cc.Vec2(-500, -708);\n\n    @property(PlayerController)\n    player: PlayerController = null;\n\n    @property(PlatformSpawner)\n    platformSpawner: PlatformSpawner = null;\n\n    private isGameActive: boolean = false;\n    private currentStick: cc.Node = null;\n    private platforms: cc.Node[] = [];\n\n    protected start() {\n        this.initGame();\n        cc.systemEvent.on('stickFallen', this.onStickFallen, this);\n    }\n\n    private initGame() {\n        this.isGameActive = true;\n        this.resetGame();\n    }\n\n    private resetGame() {\n        this.player.node.setPosition(this.startPlayerPos);\n        this.clearPlatforms();\n\n        const initialPlatform = this.platformSpawner.spawnPlatform(cc.v2(this.startPlatformPos));\n        this.platforms.push(initialPlatform);\n\n        const nextPlatform = this.platformSpawner.spawnPlatform();\n        this.platforms.push(nextPlatform);\n\n        this.player.reset();\n    }\n\n    private clearPlatforms() {\n        this.platforms.forEach(platform => platform.destroy());\n        this.platforms = [];\n    }\n\n    private onStickFallen(stickNode: cc.Node) {\n        this.currentStick = stickNode;\n\n        const stickEndPosX = this.currentStick.x + this.currentStick.height - this.player.node.width / 2;\n\n        const targetPlatform = this.getTargetPlatform(cc.v2(this.player.node.x, this.player.node.y));\n\n        const platformStartX = targetPlatform.x - targetPlatform.width / 2;\n        const platformEndX = targetPlatform.x + targetPlatform.width / 2;\n\n        if (stickEndPosX >= platformStartX && stickEndPosX <= platformEndX) {\n            this.player.moveToEndOfPlatform(platformEndX);\n        } else {\n            this.player.moveToEndOfStick(stickEndPosX);\n        }\n    }\n\n\n    private getTargetPlatform(playerPosition: cc.Vec2): cc.Node {\n        for (const platform of this.platforms) {\n            if (platform.x > playerPosition.x) {\n                return platform;\n            }\n        }\n        return null;\n    }\n\n    private spawnPlatforms() {\n        const previousPlatform = this.platforms[this.platforms.length - 1];\n        const newPlatform = this.platformSpawner.spawnPlatform(previousPlatform.getPosition());\n        this.platforms.push(newPlatform);\n    }\n\n    private endGame() {\n        this.isGameActive = false;\n        cc.log('Game Over');\n    }\n}\n"]}