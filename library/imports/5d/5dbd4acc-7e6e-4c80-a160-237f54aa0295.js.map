{"version":3,"sources":["assets\\Scripts\\StickManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class StickManager extends cc.Component {\n    private readonly TOUCHED_START: string = 'touchStart';\n    private readonly TOUCHED_END: string = 'touchEnd';\n    private readonly STICK_FALLEN: string = 'stickFallen';\n\n    private readonly size: number = 10;\n\n    @property(cc.Float)\n    private growSpeed: number = 100;\n\n    private isGrowing: boolean = false;\n    private isStickPlaced: boolean = false;\n\n    protected onEnable() {\n        cc.systemEvent.on(this.TOUCHED_START, this.onTouchStart, this);\n        cc.systemEvent.on(this.TOUCHED_END, this.onTouchEnd, this);\n    }\n\n    protected onDisable() {\n        cc.systemEvent.off(this.TOUCHED_START, this.onTouchStart, this);\n        cc.systemEvent.off(this.TOUCHED_END, this.onTouchEnd, this);\n    }\n\n    public reset() {\n        this.node.height = this.size;\n        this.node.width = this.size;\n        this.node.angle = 0; // Сброс угла поворота с использованием свойства angle\n        this.node.stopAllActions(); // Останавливаем все активные действия и твины\n\n        this.isGrowing = false;\n        this.isStickPlaced = false;\n    }\n\n    private onTouchStart() {\n        if (this.isStickPlaced) return;\n        this.startGrowing();\n    }\n\n    private onTouchEnd() {\n        if (this.isStickPlaced) return;\n        this.stopGrowing();\n    }\n\n    private startGrowing() {\n        this.isGrowing = true;\n        this.schedule(this.growStick, 0.02);\n    }\n\n    private stopGrowing() {\n        this.isGrowing = false;\n        this.unschedule(this.growStick);\n        this.rotateStick();\n        this.isStickPlaced = true;\n    }\n\n    private growStick() {\n        if (!this.isGrowing) return;\n        this.node.height += this.growSpeed * 0.2;\n    }\n\n    private rotateStick() {\n        cc.tween(this.node)\n            .to(0.5, { angle: -90 }, { easing: 'cubicOut' })\n            .call(() => {\n                this.emitStickFallenEvent();\n            })\n            .start();\n    }\n\n    private emitStickFallenEvent() {\n        cc.systemEvent.emit(this.STICK_FALLEN, this.node);\n    }\n}\n"]}